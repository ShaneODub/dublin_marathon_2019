filter(Finisher)
# Now the results table has people who finished the race, and who have 0 or 1 missing times.
# Have a a look at the runners who missed 1 checkpoint
results %>%
filter(n == 1) %>%
View()
# 906 results
# Let's see what checkpoints were missed
results %>%
group_by(Distance) %>%
summarise(Missing = sum(is.na(Time)))
# A tibble: 6 x 2
#    Distance   Missing
#      <dbl>     <int>
# 1     10        44
# 2     20        18
# 3     21.1      64
# 4     30        15
# 5     40        10
# 6     42.2       0
# Lets have at all the times for the 44 runners with a missing 10K time.
results %>%
group_by(Race.Number) %>%
filter(any(Distance == 10 & is.na(Time))) %>%
View()
# There's some weird results. People missing the 10k checkpoint but reaching the 20k in
# record breaking times and then taking another 3 hours to reach the finish line.
# They possibly started in an earlier wave than they were supposed to, messing up their times,
# or they joined the race later than the start line.
# Can see them better when the data is sorted.
# Will define a function because we'll use it for the other checkpoints as well.
missing.times <- function (d){
return(
results %>%
group_by(Race.Number) %>%
filter(any(Distance == d & is.na(Time))) %>%
mutate(min.x = min(Time, na.rm = T)) %>%
arrange(min.x)
)
}
View(missing.times(10))
# Visually scanning these, the weird results have 20k times that are less than 90 minutes.
# Can narrow the focus to the weird results with another filter
missing.times(10) %>%
filter(any(Distance == 20 & Time < 90)) %>%
View()
# 54 rows (9 runners)
# Can negate the filters used above and remove the weird results from the dataset.
results <-
results %>%
group_by(Race.Number) %>%
filter(!
(any(Distance == 10 & is.na(Time)) &
any(Distance == 20 & Time < 90))
)
# Runners with a missing 20k time
View(missing.times(20))
# 108 rows, 18 runners.
# The only anomaly is the runner with a missing 20k time and a 10k time of 8 minutes.
# Removing:
results <-
results %>%
group_by(Race.Number) %>%
filter(!
(any(Distance == 20 & is.na(Time)) &
any(Distance == 10 & Time < 10))
)
# Runners with a missing 30k time
View(missing.times(30))
# 90 rows, 15 runners.
# No weirdness.
# Runners with a missing 40k time
View(missing.times(40))
# 60 rows, 10 runners.
# Only weirdness is two runners who were going at a consistent pace to the 30k mark or beyond,
# but then dropped to way less than walking pace, and missed the 40k checkpoint.
# Deleting:
results <-
results %>%
group_by(Race.Number) %>%
filter(!
(any(Distance == 40 & is.na(Time)) &
any(Distance == 42.2 & Time > 345))
)
# Let's see what checkpoints were missed
results %>%
group_by(Distance) %>%
summarise(Missing = sum(is.na(Time)))
# Let's have a look at the median times of the remaining runners. Mean times may not be
# informative, because of outliers at either end of the spectrum.
results %>%
group_by(Distance) %>%
summarise(m = median(Time, na.rm = T))
results %>%
mutate(Time = if_else(is.na(Time) & Distance == 10,
0.498 * lead(Time),
Time)) %>% View()
results <-
results %>%
mutate(Time = if_else(is.na(Time) & Distance == 10,
0.498 * lead(Time),
Time))
results <-
results %>%
mutate(Time = if_else(is.na(Time) & Distance == 20,
lag(Time) + 0.904 * (lead(Time) - lag(Time)),
Time))
results <-
results %>%
mutate(Time = if_else(is.na(Time) & Distance == 21.1,
lag(Time) + 0.101 * (lead(Time) - lag(Time)),
Time))
results <-
results %>%
mutate(Time = if_else(is.na(Time) & Distance == 30,
lag(Time) + 0.452 * (lead(Time) - lag(Time)),
Time))
results <-
results %>%
mutate(Time = if_else(is.na(Time) & Distance == 40,
lag(Time) + 0.82 * (lead(Time) - lag(Time)),
Time))
saveRDS("results.RDS") # saved at 5:39 11/11
getwd()
saveRDS(results, "results.RDS") # saved at 5:39 11/11
results %>%
group_by(Distance) %>%
summarise(Missing = sum(is.na(Time)))
library(ggplot2)
results %>%
group_by(Distance) %>%
summarise(fivenum = fivenum(Time))
results %>%
group_by(Distance) %>%
summarise(min = min(Time),
median = median(Time),
mean = mean(Time),
max = max(Time))
results %>%
group_by(Distance) %>%
summarise(min = min(Time),
median = median(Time),
mean = mean(Time),
max = max(Time)) %>%
as.data.frame()
results %>%
group_by(Distance) %>%
summarise(min = min(Time),
median = median(Time),
mean = mean(Time),
max = max(Time)) %>%
as.data.frame() %>%
round(2)
results %>%
group_by(Distance) %>%
summarise(min = min(Time),
q1 = quantile(Time, probs = c(.25,.5,.75)),
max = max(Time)) %>%
as.data.frame() %>%
round(2)
results %>%
group_by(Distance) %>%
summarise(min = min(Time),
q1 = quantile(Time, probs = .25),
max = max(Time)) %>%
as.data.frame() %>%
round(2)
results %>%
group_by(Distance) %>%
summarise(min = min(Time),
q1 = quantile(Time, probs = .25),
median = median(Time),
mean = mean(Time),
q3 = quantile(Time, probs = .75),
max = max(Time)) %>%
as.data.frame() %>%
round(2)
results %>%
group_by(Distance) %>%
summarise(min = min(Time),
q1 = quantile(Time, probs = .25),
median = median(Time),
mean = mean(Time),
q3 = quantile(Time, probs = .75),
max = max(Time),
sd = sd(Time),
missing = count(is.na(Time))) %>%
as.data.frame() %>%
round(2)
results %>%
group_by(Distance) %>%
summarise(min = min(Time),
q1 = quantile(Time, probs = .25),
median = median(Time),
mean = mean(Time),
q3 = quantile(Time, probs = .75),
max = max(Time),
sd = sd(Time),
missing = sum(is.na(Time))) %>%
as.data.frame() %>%
round(2)
results %>%
group_by(Distance) %>%
summarise(min = min(Time),
q1 = quantile(Time, probs = .25),
median = median(Time),
mean = mean(Time),
q3 = quantile(Time, probs = .75),
max = max(Time),
sd = sd(Time)) %>%
as.data.frame() %>%
round(2)
finish.times <-
ggplot(data = results, mapping = aes(Time, Age.Bracket)) + geom_point()
finish.times
results %>%
filter(Distance = 42.2) %>%
ggplot(mapping = aes(Time, Age.Bracket)) + geom_point()
results %>%
filter(Distance == 42.2) %>%
ggplot(mapping = aes(Time, Age.Bracket)) + geom_point()
results %>%
filter(Distance == 42.2) %>%
ggplot(mapping = aes(Time)) + geom_line()
results %>%
filter(Distance == 42.2) %>%
ggplot(mapping = aes(Time)) + geom_density()
results %>%
filter(Distance == 42.2) %>%
ggplot(mapping = aes(Time)) +
geom_vline(aes(xintercept = c(120,150,180,210,240)))
results %>%
filter(Distance == 42.2) %>%
ggplot(mapping = aes(Time)) +
geom_vline(xintercept = c(120,150,180,210,240))
results %>%
filter(Distance == 42.2) %>%
ggplot(mapping = aes(Time))
results %>%
filter(Distance == 42.2) %>%
ggplot(mapping = aes(Time)) +
geom_density() +
geom_vline(xintercept = c(120,150,180,210,240))
results %>%
filter(Distance == 42.2) %>%
ggplot(mapping = aes(Time)) +
geom_density() +
geom_vline(xintercept = seq(120:270,30))
results %>%
filter(Distance == 42.2) %>%
ggplot(mapping = aes(Time)) +
geom_density() +
geom_vline(xintercept = seq(120,270,30))
results %>%
filter(Distance == 42.2) %>%
ggplot(mapping = aes(Time)) +
geom_density() +
geom_vline(xintercept = seq(120,270,30), linetype = "dashed")
results %>%
filter(Distance == 42.2) %>%
ggplot(mapping = aes(Time)) +
geom_density() +
geom_vline(xintercept = seq(120,270,30), linetype = "dashed") +
theme_void()
results %>%
filter(Distance == 42.2) %>%
ggplot(mapping = aes(Time)) +
geom_density() +
geom_vline(xintercept = seq(120,270,30), linetype = "dashed") +
theme_minimal()
results %>%
filter(Distance == 42.2) %>%
ggplot(mapping = aes(Time)) +
geom_density() +
geom_vline(xintercept = seq(150,270,30), linetype = "dashed") +
theme_minimal()
results %>%
filter(Distance == 42.2) %>%
ggplot(mapping = aes(Time)) +
geom_density() +
geom_vline(xintercept = seq(180,270,30), linetype = "dashed") +
theme_minimal()
results %>%
filter(Distance == 42.2) %>%
ggplot(mapping = aes(Time)) +
geom_density() +
theme_minimal()
results %>%
group_by(Race.Number) %>%
filter(any(Distance == 10)) %>%
mutate(min.x = min(Time, na.rm = T)) %>%
arrange(min.x) %>%
View()
results %>%
group_by(Race.Number) %>%
mutate(splits = Time - lag(Time, default = 0)) %>%
View()
results %>%
group_by(Race.Number) %>%
filter(Distance %in% [10,20,30,40]) %>%
mutate(splits = Time - lag(Time, default = 0)) %>%
View()
results %>%
group_by(Race.Number) %>%
filter(Distance %in% c(10,20,30,40)) %>%
mutate(splits = Time - lag(Time, default = 0)) %>%
View()
results %>%
group_by(Race.Number) %>%
filter(Distance %in% c(10,20,30,40)) %>%
mutate(splits = Time - lag(Time, default = 0)) %>%
select(1,2,3,4,6,9)
View()
results %>%
group_by(Race.Number) %>%
filter(Distance %in% c(10,20,30,40)) %>%
mutate(splits = Time - lag(Time, default = 0)) %>%
select(1,2,3,4,6,9) %>%
View()
splits <-
results %>%
group_by(Race.Number) %>%
filter(Distance %in% c(10,20,30,40)) %>%
mutate(splits = Time - lag(Time, default = 0)) %>%
select(1,2,3,4,6,9)
View(splits)
glimpse(splits)
splits %>%
group_by(Distance) %>%
summarise(min = min(splits),
q1 = quantile(splits, probs = .25),
median = median(splits),
mean = mean(splits),
q3 = quantile(splits, probs = .75),
max = max(splits),
sd = sd(splits)) %>%
as.data.frame() %>%
round(2)
results %>%
group_by(Race.Number) %>%
filter(any(Distance == 10)) %>%
mutate(min.x = min(Time, na.rm = T)) %>%
arrange(min.x) %>%
View()
results %>%
group_by(Race.Number) %>%
mutate(min.x = min(Time, na.rm = T)) %>%
arrange(min.x) %>%
View()
splits %>%
group_by(Race.Number) %>%
mutate(min.x = min(Time),
sd.x = sd(Time())
) %>%
arrange(min.x) %>%
View()
splits %>%
group_by(Race.Number) %>%
mutate(min.x = min(splits),
sd.x = sd(splits)
) %>%
arrange(min.x) %>%
View()
splits %>%
group_by(Race.Number) %>%
filter(Distance %in% c(10,20,30))
mutate(min.x = min(splits),
sd.x = sd(splits)
) %>%
arrange(desc(sd.x)) %>%
View()
splits %>%
group_by(Race.Number) %>%
filter(Distance %in% c(10,20,30)) %>%
mutate(min.x = min(splits),
sd.x = sd(splits)
) %>%
arrange(desc(sd.x)) %>%
View()
splits %>%
group_by(Race.Number) %>%
mutate(min.x = min(splits),
sd.x = sd(splits)
) %>%
arrange(desc(sd.x)) %>%
View()
fiver <- function(df,x){
df %>%
group_by(Distance) %>%
summarise(min = min(x),
q1 = quantile(x, probs = .25),
median = median(x),
mean = mean(x),
q3 = quantile(x, probs = .75),
max = max(x),
sd = sd(x)) %>%
as.data.frame() %>%
round(2)
}
fiver(results, Time)
fiver(results, results$Time)
fiver(results, results$Time)
fiver(results, Time)
fiver(results, "Time")
fiver(results, "Time")
fiver <- function(df){
df %>%
group_by(Distance) %>%
summarise(min = min(Time),
q1 = quantile(Time, probs = .25),
median = median(Time),
mean = mean(Time),
q3 = quantile(Time, probs = .75),
max = max(Time),
sd = sd(Time)) %>%
as.data.frame() %>%
round(2)
}
fiver(results)
splits <-
results %>%
group_by(Race.Number) %>%
filter(Distance %in% c(10,20,30,40)) %>%
mutate(Time = Time - lag(Time, default = 0)) %>%
select(1,2,3,4,6,9)
View(splits)
splits <-
results %>%
group_by(Race.Number) %>%
filter(Distance %in% c(10,20,30,40)) %>%
mutate(Time = Time - lag(Time, default = 0)) %>%
select(1,2,3,4,6,8)
View(splits)
splits <-
results %>%
group_by(Race.Number) %>%
filter(Distance %in% c(10,20,30,40)) %>%
mutate(Time = Time - lag(Time, default = 0))
View(splits)
splits <-
results %>%
group_by(Race.Number) %>%
filter(Distance %in% c(10,20,30,40)) %>%
mutate(Time = Time - lag(Time, default = 0))%>%
select(1,2,3,4,6,7)
View(splits)
fiver(splits)
splits %>%
group_by(Race.Number) %>%
mutate(min.x = min(splits),
sd.x = sd(splits)
) %>%
arrange(desc(sd.x)) %>%
View()
splits %>%
group_by(Race.Number) %>%
mutate(min.x = min(Time),
sd.x = sd(Time)
) %>%
arrange(desc(sd.x)) %>%
View()
results %>%
filter(Race.Number %in% c(16391,20283,20201,21318,21319,18108))
results %>%
filter(!
(Race.Number %in% c(16391,20283,20201,21318,21319,18108))
)
results %>%
filter(!
(Race.Number %in% c(16391,20283,20201,21318,21319,18108))
)
results <-
results %>%
filter(!
(Race.Number %in% c(16391,20283,20201,21318,21319,18108))
)
splits <-
results %>%
group_by(Race.Number) %>%
filter(Distance %in% c(10,20,30,40)) %>%
mutate(Time = Time - lag(Time, default = 0))%>%
select(1,2,3,4,6,7)
results %>%
filter(Distance == 42.2) %>%
ggplot(mapping = aes(Time)) +
geom_density() +
theme_minimal()
splits %>%
group_by(Gender) %>%
summarise(sd = sd(Time))
# Measure the difference between splits
pairs(splits$Time)
splits %>%
group_by(Race.Number) %>%
mutate(min.x = min(Time),
sd.x = sd(Time)
) %>%
arrange(desc(sd.x))
splits <-
splits %>%
group_by(Race.Number) %>%
mutate(min.x = min(Time),
sd.x = sd(Time)
) %>%
arrange(desc(sd.x))
splits %>%
group_by(Gender) %>%
summarise(mean.sd = mean(sd))
splits %>%
group_by(Gender) %>%
summarise(sd = mean(sd.x))
saveRDS(results, "results.RDS")
