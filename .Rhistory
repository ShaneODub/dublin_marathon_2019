# print("upper_chkpt_d") # <<<
# print(upper_chkpt_d) # <<<
lower_time <- chkpt_times[current_section]
# print("lower_time") # <<<
# print(lower_time) # <<<
upper_time <- chkpt_times[current_section + 1] # <<<
# print("upper_time") # <<<
# print(upper_time) # <<<
current_distance <-
lower_chkpt_d +
(upper_chkpt_d - lower_chkpt_d)*(time_intervals - lower_time)/(upper_time - lower_time)
return(current_distance)
}
myfunc2(frames_df[17718,c(4:7,9)])
myfunc2(frames_df[1,c(4:7,9)])
frames_df[17718,]
length(frames_df)
str(frames_df)
View(frames_df)
frames_df[1771,]
frames_df[17718,]
saveRDS(frames_df,file = "frame_df_2.rds") # 05/11/2019 17:02
frames_df[17781,]
View[frames_df]
str(frames_df)
frames_df[1,]
frames_df[17781,]
frames_df[17,]
frames_df[177,]
frames_df[1770,]
frames_df[10000,]
frames_df[13000,]
frames_df[16000,]
frames_df[17000,]
frames_df[17500,]
frames_df[17250,]
frames_df[17375,]
frames_df[17435,]
frames_df[17475,]
frames_df[17487,]
frames_df[17481,]
frames_df[17484,]
frames_df[17483,]
frames_df[17482,]
frames_df[17481,]
frames_df[1,]
frames_df[17481,]
View(frames_df)
myfunc2 <- function(rowx){
print("rowx") # <<<
print(rowx) # <<<
time_intervals <- seq(15,510,by = 15)
print("time intervals")
print(time_intervals)
t_200k <- rowx[5] + (160/2.2)*(rowx[5] - rowx[4]) # A dummy time; needed later
print("t_200k") # <<<
print(t_200k) # <<<
chkpt_times <- data.frame(c(0,rowx[1:5],t_200k)) # Times: 0k, 10k, 20k, 30k, 40k, 42k,200k.
print("chkpt_times") # <<<
print(chkpt_times) # <<<
chkpt_distances <- c(0,10,20,30,40,42,200)
# print("chkpt_distances") # <<<
# print(chkpt_distances) # <<<
current_section <- findInterval(time_intervals,chkpt_times) # from 1 to  7
# print("current_section") # <<<
# print(current_section) # <<<
lower_chkpt_d <- chkpt_distances[current_section]
# print("lower_chkpt_d") # <<<
# print(lower_chkpt_d) # <<<
upper_chkpt_d <- chkpt_distances[current_section + 1]
# print("upper_chkpt_d") # <<<
# print(upper_chkpt_d) # <<<
lower_time <- chkpt_times[current_section]
# print("lower_time") # <<<
# print(lower_time) # <<<
upper_time <- chkpt_times[current_section + 1] # <<<
# print("upper_time") # <<<
# print(upper_time) # <<<
current_distance <-
lower_chkpt_d +
(upper_chkpt_d - lower_chkpt_d)*(time_intervals - lower_time)/(upper_time - lower_time)
return(current_distance)
}
myfunc2(frames_df[17481,c(4:7,9)])
apply(frames_df[1:4,c(4:7,9)],1,function(x) myfunc2(x))
myfunc2 <- function(rowx){
print("rowx") # <<<
print(rowx) # <<<
time_intervals <- seq(15,510,by = 15)
print("time intervals")
print(time_intervals)
str(time_intervals)
t_200k <- rowx[5] + (160/2.2)*(rowx[5] - rowx[4]) # A dummy time; needed later
print("t_200k") # <<<
print(t_200k) # <<<
chkpt_times <- data.frame(c(0,rowx[1:5],t_200k)) # Times: 0k, 10k, 20k, 30k, 40k, 42k,200k.
print("chkpt_times") # <<<
print(chkpt_times) # <<<
str(chkpt_times)
chkpt_distances <- c(0,10,20,30,40,42,200)
# print("chkpt_distances") # <<<
# print(chkpt_distances) # <<<
current_section <- findInterval(time_intervals,chkpt_times) # from 1 to  7
# print("current_section") # <<<
# print(current_section) # <<<
lower_chkpt_d <- chkpt_distances[current_section]
# print("lower_chkpt_d") # <<<
# print(lower_chkpt_d) # <<<
upper_chkpt_d <- chkpt_distances[current_section + 1]
# print("upper_chkpt_d") # <<<
# print(upper_chkpt_d) # <<<
lower_time <- chkpt_times[current_section]
# print("lower_time") # <<<
# print(lower_time) # <<<
upper_time <- chkpt_times[current_section + 1] # <<<
# print("upper_time") # <<<
# print(upper_time) # <<<
current_distance <-
lower_chkpt_d +
(upper_chkpt_d - lower_chkpt_d)*(time_intervals - lower_time)/(upper_time - lower_time)
return(current_distance)
}
apply(frames_df[1:4,c(4:7,9)],1,function(x) myfunc2(x))
apply(frames_df[1,c(4:7,9)],1,function(x) myfunc2(x))
myfunc2(frames_df[1,c(4:7,9)])
myfunc2(frames_df[12111,c(4:7,9)])
apply(frames_df[1:2,c(4:7,9)],1,function(x) myfunc2(x))
tempdf <- frames_df[1:5,]
View(tempdf)
apply(tempdf,1,function(x) myfunc2(x))
apply(tempdf[,c(4:7,9)],1,function(x) myfunc2(x))
tempdf[,c(4:7,9)]
tempdf <- frames_df[1:5,c(4:7,9)]
apply(tempdf,1,function(x) myfunc2(x))
myfunc2 <- function(rowx){
print("rowx") # <<<
print(rowx) # <<<
time_intervals <- seq(15,510,by = 15)
print("time intervals")
print(time_intervals)
str(time_intervals)
t_200k <- rowx[5] + (160/2.2)*(rowx[5] - rowx[4]) # A dummy time; needed later
print("t_200k") # <<<
print(t_200k) # <<<
chkpt_times <- c(0,rowx[1:5],t_200k) # Times: 0k, 10k, 20k, 30k, 40k, 42k,200k.
print("chkpt_times") # <<<
print(chkpt_times) # <<<
str(chkpt_times)
chkpt_distances <- c(0,10,20,30,40,42,200)
# print("chkpt_distances") # <<<
# print(chkpt_distances) # <<<
current_section <- findInterval(time_intervals,chkpt_times) # from 1 to  7
# print("current_section") # <<<
# print(current_section) # <<<
lower_chkpt_d <- chkpt_distances[current_section]
# print("lower_chkpt_d") # <<<
# print(lower_chkpt_d) # <<<
upper_chkpt_d <- chkpt_distances[current_section + 1]
# print("upper_chkpt_d") # <<<
# print(upper_chkpt_d) # <<<
lower_time <- chkpt_times[current_section]
# print("lower_time") # <<<
# print(lower_time) # <<<
upper_time <- chkpt_times[current_section + 1] # <<<
# print("upper_time") # <<<
# print(upper_time) # <<<
current_distance <-
lower_chkpt_d +
(upper_chkpt_d - lower_chkpt_d)*(time_intervals - lower_time)/(upper_time - lower_time)
return(current_distance)
}
apply(tempdf,1,function(x) myfunc2(x))
apply(frames_df[1:2,c(4:7,9)],1,function(x) myfunc2(x))
tempdf <- apply(frames_df[1:10,c(4:7,9)],1,function(x) myfunc2(x))
View(tempdf)
load("C:/Users/Shane/projects/marathon/.RData")
load("C:/Users/Shane/projects/marathon/.RData")
cor(splits[,12:15], use = "complete.obs")
boxplot(splits[,12:15])
boxplot(splits[,12:15] ~ Gender)
boxplot(splits[,12:15] ~ "Gender")
splits <-
all.results %>%
transmute(Gender,
Age.Bracket
split_1 = X10K,
split_2 = X20K - X10K,
split_3 = X30K - X20K,
split_4 = X40K - X30K)
splits <-
all.results %>%
transmute(Gender,
Age.Bracket,
split_1 = X10K,
split_2 = X20K - X10K,
split_3 = X30K - X20K,
split_4 = X40K - X30K)
library(magrittr)
splits <-
all.results %>%
transmute(Gender,
Age.Bracket,
split_1 = X10K,
split_2 = X20K - X10K,
split_3 = X30K - X20K,
split_4 = X40K - X30K)
library(dplyr)
library(tidyverse)
library(hms)
splits <-
all.results %>%
transmute(Gender,
Age.Bracket,
split_1 = X10K,
split_2 = X20K - X10K,
split_3 = X30K - X20K,
split_4 = X40K - X30K)
View(splits)
summary(splits)
summary(splits[complete.cases(splits)])
summary(splits[complete.cases(splits),])
all.results %>% View()
splits <-
all.results %>%
transmute(split_1 = X10K,
split_2 = X20K - X10K,
split_3 = X30K - X20K,
split_4 = X40K - X30K,
Gender,
Age.Bracket)
summary(splits)
all.results %>%
mutate(Finisher = if_else(Overall.Position =="DNF",
"No",
"Yes"))
all.results %>%
mutate(Finisher = if_else(Overall.Position =="DNF",
"No",
"Yes")) %>% View()
all.results <-
all.results %>%
mutate(Finisher = if_else(Overall.Position =="DNF",
"No",
"Yes"))
as.numeric(all.results$Overall.Position)
# Convert the Overall.Position column to numeric
all.results$Overall.Position <- as.numeric(all.results$Overall.Position)
saveRDS(all.results, file = "all.results.rds") # just in case I mess up
splits <-
all.results %>%
transmute(split_1 = X10K,
split_2 = X20K - X10K,
split_3 = X30K - X20K,
split_4 = X40K - X30K,
Gender,
Age.Bracket,
Finisher)
summary(splits)
qqnorm(splits[,1:4])
glimpse((splits)
glimpse(splits)
qqnorm(splits[,1:4])
glimpse(splits)
rm(data = clean_script)
rm(data = clean_script.R)
c(1,2,3) %>% View()
(.packages())
setwd("C:/Users/Shane/Projects/marathon")
results <- readRDS(choose.files())
list.of.dataframes <- readRDS(choose.files())
results <- bind_rows(list.of.dataframes)
results <-
list.of.dataframes %>%
lapply(., mutate_if, is.integer, as.character) %>%
bind_rows()
library(dplyr)
results <-
list.of.dataframes %>%
lapply(., mutate_if, is.integer, as.character) %>%
bind_rows()
results %>% View()
# Keeping just the columns I plan to use
results <- select(results,1,4,6,10,12,14,16,18,20,22,21)
results %>% View()
results <-
list.of.dataframes %>%
lapply(., mutate_if, is.integer, as.character) %>%
bind_rows() %>%
as_tibble()
results %>% View()
glimpse(results)
glimpse(results)
# Keeping just the columns I plan to use
results <- select(results,1,4,6,10,12,14,16,18,20,22,21)
glimpse(results)
glimpse(results)
results %>% View()
library(tidyr)
results %>%
pivot_longer(cols = c("X10K","X20K","Halfway","X30K","X40K","Gun.Time","Chip.Time"),
names_to = "Distance",
values_to = "Times")
results <-
results %>%
pivot_longer(cols = c("X10K","X20K","Halfway","X30K","X40K","Gun.Time","Chip.Time"),
names_to = "Distance",
values_to = "Time")
View(results)
summary(results)
glimpse(results)
glimpse(results)
# 'Category' column contains Gender info, and Age info.
unique(results$Category)
# 'Category' column contains Gender info, and Age info.
unique(results$Category)
all.results$Category <-
all.results$Category %>%
str_remove("[MF]") %>%
str_replace("U19","18") %>%
str_replace("S","20")
results$Category <-
results$Category %>%
str_remove("[MF]") %>%
str_replace("U19","18") %>%
str_replace("S","20")
library(stringr)
results$Category <-
results$Category %>%
str_remove("[MF]") %>%
str_replace("U19","18") %>%
str_replace("S","20")
unique(results$Category)
rename(results, Category = Age.Bracket)
rename(results, Age.Bracket = Category)
results <-
results %>%
rename(Age.Bracket = Category)
glimpse(results)
results %>%
mutate(Finisher = if_else(Overall.Position == "DNF",
"No",
"Yes"))
results[124060:124067,] %>%
mutate(Finisher = if_else(Overall.Position == "DNF",
"No",
"Yes"))
results[124060:124067,] %>%
mutate(Finisher = if_else(Overall.Position == "DNF")
)
results[124060:124067,] %>%
mutate(Finisher = (Overall.Position == "DNF"))
results[124060:124067,] %>%
mutate(Finisher = (Overall.Position != "DNF"))
glimpse(results)
results[124060:124067,] %>%
mutate(Finisher = (Overall.Position != "DNF")) %>%
select(1,2,3,4,7,5,6)
results <-
results %>%
mutate(Finisher = (Overall.Position != "DNF")) %>%
select(1,2,3,4,7,5,6)
glimpse(results)
results$Distance <-
results$Distance %>%
str_remove("[XK]") %>%
str_replace("Halfway","21.1") %>%           # The halfway point is at 21.1 kilometers.
str_replace("Gun.Time","42.2") %>%          # Finish point is at ca. 42.2 kilometers
str_replace("Chip.Time","42.195")           # Want to differentiate it for now
unique(results$Distance)
fruits <- c("one apple", "two pears", "three bananas")
str_replace(fruits, "[aeiou]", "-")
str_replace_all(fruits, "[aeiou]", "-")
str_replace_all(fruits, "[aeiou]", toupper)
str_replace_all(fruits, "b", NA_character_)
results$Distance %>%
str_remove_all("[XK]") %>%
str_replace("Halfway","21.1") %>%           # The halfway point is at 21.1 kilometers.
str_replace("Gun.Time","42.2") %>%          # Finish point is at ca. 42.2 kilometers
str_replace("Chip.Time","42.195")
results$Distance <-
results$Distance %>%
str_remove_all("[XK]") %>%
str_replace("Halfway","21.1") %>%           # The halfway point is at 21.1 kilometers.
str_replace("Gun.Time","42.2") %>%          # Finish point is at ca. 42.2 kilometers
str_replace("Chip.Time","42.195")
glimpse(results)
results %>%
mutate(Race.Number = as.numeric(Race.Number),
Gender = as.factor(Gender),
Age.Bracket = as.factor(Age.Bracket),
Overall.Position = as.numeric(Overall.Position),
Distance = as.numeric(Distance),
Time = as.numeric(as_hms(Time))) %>% glimpse()
library(hms)
glimpse(results)
results %>%
mutate(Race.Number = as.numeric(Race.Number),
Gender = as.factor(Gender),
Age.Bracket = as.factor(Age.Bracket), # For now. Maybe as.numeric() later.
Overall.Position = as.numeric(Overall.Position),
Distance = as.numeric(Distance),
Time = as.numeric(as_hms(Time)))
results %>%
mutate(Race.Number = as.numeric(Race.Number),
Gender = as.factor(Gender),
Age.Bracket = as.factor(Age.Bracket), # For now. Maybe as.numeric() later.
Overall.Position = as.numeric(Overall.Position),
Distance = as.numeric(Distance),
Time = as.numeric(as_hms(Time))/60)
results <-
results %>%
mutate(Race.Number = as.numeric(Race.Number),
Gender = as.factor(Gender),
Age.Bracket = as.factor(Age.Bracket), # For now. Maybe as.numeric() later.
Overall.Position = as.numeric(Overall.Position),
Distance = as.numeric(Distance),
Time = as.numeric(as_hms(Time))/60)   # character -> hms/difftime -> numeric
# Times are now expressed in minutes.
glimpse(results)
results["9276",] %>% View()
source('C:/Users/Shane/projects/marathon/tidy.R', echo=TRUE)
results %>%
slice(9276) %>% View()
results %>%
filter(Race.Number == 9276) %>% View()
results %>%
filter(Race.Number == 9276) %>%
mutate(Time = if_else(is.na(Time) & Distance == 42.195,
fill(Time,"up"),
Time)) %>% View()
results %>%
filter(Race.Number == 9276) %>%
mutate(Time = if_else(is.na(Time) & Distance == 42.195,
fill(.,Time,"up"),
Time)) %>% View()
results %>%
filter(Race.Number == 9276) %>%
mutate(Time = if_else(is.na(Time) & Distance == 42.195,
fill(.,Time),
Time)) %>% View()
results %>%
filter(Race.Number == 9276) %>%
mutate(Time = if_else(is.na(Time) & Distance == 42.195,
fill(.,Time, .direction = "up"),
Time)) %>% View()
results %>%
filter(Race.Number == 9276)
results %>%
filter(Race.Number == 9276) %>%
mutate_if(is.na(Time) & Distance == 42.195,
fill(.,Time, .direction = "up")) %>% View()
results %>%
filter(Race.Number == 9276) %>%
mutate_if(is.na(.$Time) & Distance == 42.195,
fill(.,Time, .direction = "up")) %>% View()
results %>%
filter(Race.Number == 9276) %>%
mutate_if(is.na(.$Time) & .$Distance == 42.195,
fill(.,Time, .direction = "up")) %>% View()
results %>%
filter(Race.Number == 9276) %>%
if_else(is.na(.$Time) & .$Distance == 42.195,fill(.,Time, .direction = "up")) %>% View
results %>%
filter(Race.Number == 9276) %>%
if_else(is.na(Time) & Distance == 42.195,fill(.,Time, .direction = "up")) %>% View
results %>%
filter(Race.Number == 9276)
results %>%
filter(Race.Number == 9276) %>%
fill(Time)
tbl <- tibble(
x = 1:10,
y = factor(rep(c("a", "c"), each  = 5), levels = c("a", "b", "c"))
)
tbl %>%
group_by(y) %>%
group_rows()
tbl
tbl %>%
group_by(y) %>%
group_rows()
results %>%
group_by()
filter(Race.Number == 9276 & Distance > 42)
results %>%
filter(Race.Number == 9276 & Distance > 42)
results %>%
filter(Race.Number == 9276 & Distance > 42) %>%
fill(Time)
results %>%
filter(Race.Number %in% c(9275,9276,9277) & Distance > 42) %>%
fill(Time)
results %>% filter(Distance > 42)
results %>% filter(Race.Number %in% 159:162)
results %>% filter(Race.Number %in% 159:162) %>% View()
results %>%
filter(Race.Number %in% 159:162)
filter(Distance > 42)
results %>%
filter(Race.Number %in% 159:162) %>%
filter(Distance > 42)
results %>%
filter(Race.Number %in% 159:162) %>%
filter(Distance > 42) %>%
fill(Time)
results %>%
filter(Race.Number == 13660) %>%
filter(Distance > 42)
results %>%
filter(Race.Number == 13660) %>%
filter(Distance > 42) %>%
fill(Time)
