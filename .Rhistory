print(rowx) # <<<
time_intervals <- seq(15,510,by = 15)
print("time intervals")
print(time_intervals)
t_200k <- rowx[5] + (160/2.2)*(rowx[5] - rowx[4]) # A dummy time; needed later
print("t_200k") # <<<
print(t_200k) # <<<
chkpt_times <- data.frame(c(0,rowx[1:5],t_200k)) # Times: 0k, 10k, 20k, 30k, 40k, 42k,200k.
print("chkpt_times") # <<<
print(chkpt_times) # <<<
chkpt_distances <- c(0,10,20,30,40,42,200)
# print("chkpt_distances") # <<<
# print(chkpt_distances) # <<<
current_section <- findInterval(time_intervals,chkpt_times) # from 1 to  7
# print("current_section") # <<<
# print(current_section) # <<<
lower_chkpt_d <- chkpt_distances[current_section]
# print("lower_chkpt_d") # <<<
# print(lower_chkpt_d) # <<<
upper_chkpt_d <- chkpt_distances[current_section + 1]
# print("upper_chkpt_d") # <<<
# print(upper_chkpt_d) # <<<
lower_time <- chkpt_times[current_section]
# print("lower_time") # <<<
# print(lower_time) # <<<
upper_time <- chkpt_times[current_section + 1] # <<<
# print("upper_time") # <<<
# print(upper_time) # <<<
current_distance <-
lower_chkpt_d +
(upper_chkpt_d - lower_chkpt_d)*(time_intervals - lower_time)/(upper_time - lower_time)
return(current_distance)
}
myfunc2(frames_df[17718,c(4:7,9)])
myfunc2(frames_df[1,c(4:7,9)])
frames_df[17718,]
length(frames_df)
str(frames_df)
View(frames_df)
frames_df[1771,]
frames_df[17718,]
saveRDS(frames_df,file = "frame_df_2.rds") # 05/11/2019 17:02
frames_df[17781,]
View[frames_df]
str(frames_df)
frames_df[1,]
frames_df[17781,]
frames_df[17,]
frames_df[177,]
frames_df[1770,]
frames_df[10000,]
frames_df[13000,]
frames_df[16000,]
frames_df[17000,]
frames_df[17500,]
frames_df[17250,]
frames_df[17375,]
frames_df[17435,]
frames_df[17475,]
frames_df[17487,]
frames_df[17481,]
frames_df[17484,]
frames_df[17483,]
frames_df[17482,]
frames_df[17481,]
frames_df[1,]
frames_df[17481,]
View(frames_df)
myfunc2 <- function(rowx){
print("rowx") # <<<
print(rowx) # <<<
time_intervals <- seq(15,510,by = 15)
print("time intervals")
print(time_intervals)
t_200k <- rowx[5] + (160/2.2)*(rowx[5] - rowx[4]) # A dummy time; needed later
print("t_200k") # <<<
print(t_200k) # <<<
chkpt_times <- data.frame(c(0,rowx[1:5],t_200k)) # Times: 0k, 10k, 20k, 30k, 40k, 42k,200k.
print("chkpt_times") # <<<
print(chkpt_times) # <<<
chkpt_distances <- c(0,10,20,30,40,42,200)
# print("chkpt_distances") # <<<
# print(chkpt_distances) # <<<
current_section <- findInterval(time_intervals,chkpt_times) # from 1 to  7
# print("current_section") # <<<
# print(current_section) # <<<
lower_chkpt_d <- chkpt_distances[current_section]
# print("lower_chkpt_d") # <<<
# print(lower_chkpt_d) # <<<
upper_chkpt_d <- chkpt_distances[current_section + 1]
# print("upper_chkpt_d") # <<<
# print(upper_chkpt_d) # <<<
lower_time <- chkpt_times[current_section]
# print("lower_time") # <<<
# print(lower_time) # <<<
upper_time <- chkpt_times[current_section + 1] # <<<
# print("upper_time") # <<<
# print(upper_time) # <<<
current_distance <-
lower_chkpt_d +
(upper_chkpt_d - lower_chkpt_d)*(time_intervals - lower_time)/(upper_time - lower_time)
return(current_distance)
}
myfunc2(frames_df[17481,c(4:7,9)])
apply(frames_df[1:4,c(4:7,9)],1,function(x) myfunc2(x))
myfunc2 <- function(rowx){
print("rowx") # <<<
print(rowx) # <<<
time_intervals <- seq(15,510,by = 15)
print("time intervals")
print(time_intervals)
str(time_intervals)
t_200k <- rowx[5] + (160/2.2)*(rowx[5] - rowx[4]) # A dummy time; needed later
print("t_200k") # <<<
print(t_200k) # <<<
chkpt_times <- data.frame(c(0,rowx[1:5],t_200k)) # Times: 0k, 10k, 20k, 30k, 40k, 42k,200k.
print("chkpt_times") # <<<
print(chkpt_times) # <<<
str(chkpt_times)
chkpt_distances <- c(0,10,20,30,40,42,200)
# print("chkpt_distances") # <<<
# print(chkpt_distances) # <<<
current_section <- findInterval(time_intervals,chkpt_times) # from 1 to  7
# print("current_section") # <<<
# print(current_section) # <<<
lower_chkpt_d <- chkpt_distances[current_section]
# print("lower_chkpt_d") # <<<
# print(lower_chkpt_d) # <<<
upper_chkpt_d <- chkpt_distances[current_section + 1]
# print("upper_chkpt_d") # <<<
# print(upper_chkpt_d) # <<<
lower_time <- chkpt_times[current_section]
# print("lower_time") # <<<
# print(lower_time) # <<<
upper_time <- chkpt_times[current_section + 1] # <<<
# print("upper_time") # <<<
# print(upper_time) # <<<
current_distance <-
lower_chkpt_d +
(upper_chkpt_d - lower_chkpt_d)*(time_intervals - lower_time)/(upper_time - lower_time)
return(current_distance)
}
apply(frames_df[1:4,c(4:7,9)],1,function(x) myfunc2(x))
apply(frames_df[1,c(4:7,9)],1,function(x) myfunc2(x))
myfunc2(frames_df[1,c(4:7,9)])
myfunc2(frames_df[12111,c(4:7,9)])
apply(frames_df[1:2,c(4:7,9)],1,function(x) myfunc2(x))
tempdf <- frames_df[1:5,]
View(tempdf)
apply(tempdf,1,function(x) myfunc2(x))
apply(tempdf[,c(4:7,9)],1,function(x) myfunc2(x))
tempdf[,c(4:7,9)]
tempdf <- frames_df[1:5,c(4:7,9)]
apply(tempdf,1,function(x) myfunc2(x))
myfunc2 <- function(rowx){
print("rowx") # <<<
print(rowx) # <<<
time_intervals <- seq(15,510,by = 15)
print("time intervals")
print(time_intervals)
str(time_intervals)
t_200k <- rowx[5] + (160/2.2)*(rowx[5] - rowx[4]) # A dummy time; needed later
print("t_200k") # <<<
print(t_200k) # <<<
chkpt_times <- c(0,rowx[1:5],t_200k) # Times: 0k, 10k, 20k, 30k, 40k, 42k,200k.
print("chkpt_times") # <<<
print(chkpt_times) # <<<
str(chkpt_times)
chkpt_distances <- c(0,10,20,30,40,42,200)
# print("chkpt_distances") # <<<
# print(chkpt_distances) # <<<
current_section <- findInterval(time_intervals,chkpt_times) # from 1 to  7
# print("current_section") # <<<
# print(current_section) # <<<
lower_chkpt_d <- chkpt_distances[current_section]
# print("lower_chkpt_d") # <<<
# print(lower_chkpt_d) # <<<
upper_chkpt_d <- chkpt_distances[current_section + 1]
# print("upper_chkpt_d") # <<<
# print(upper_chkpt_d) # <<<
lower_time <- chkpt_times[current_section]
# print("lower_time") # <<<
# print(lower_time) # <<<
upper_time <- chkpt_times[current_section + 1] # <<<
# print("upper_time") # <<<
# print(upper_time) # <<<
current_distance <-
lower_chkpt_d +
(upper_chkpt_d - lower_chkpt_d)*(time_intervals - lower_time)/(upper_time - lower_time)
return(current_distance)
}
apply(tempdf,1,function(x) myfunc2(x))
apply(frames_df[1:2,c(4:7,9)],1,function(x) myfunc2(x))
tempdf <- apply(frames_df[1:10,c(4:7,9)],1,function(x) myfunc2(x))
View(tempdf)
load("C:/Users/Shane/projects/marathon/.RData")
library(dplyr)
library(tidyr)
library(stringr)
library(hms)
library(magrittr)
library(ggplot2)
library(tweenr)
library(gganimate)
setwd("C:/Users/Shane/Projects/marathon")
results2 <- readRDS("results2.RDS")
p <-
results2 %>%
filter(Time %in% c(45,60,75),
Gender == "Male") %>%
ggplot(mapping = aes(Distance, Age, col = Gender)) +
geom_point(size = 0.4) +
xlim(0,42.2)
p + facet_wrap(~Time)
anim <- p + transition_states(Time, state_length = 0)
anim
View(results2)
p <-
results2 %>%
filter(Time %in% c(45,60,75),
Gender == "Male",
Overall.Position > 10000) %>%
ggplot(mapping = aes(Distance, Age, col = Gender)) +
geom_point(size = 0.4) +
xlim(0,42.2)
anim <- p + transition_states(Time, state_length = 0)
anim
p <-
results2 %>%
filter(Time %in% c(45,60,75),
Gender == "Male",
Overall.Position > 17000) %>%
ggplot(mapping = aes(Distance, Age, col = Gender)) +
geom_point(size = 0.4) +
xlim(0,42.2)
anim <- p + transition_states(Time, state_length = 0)
anim
p <-
results2 %>%
filter(Time %in% c(45,60,75),
Gender == "Male",
Overall.Position >= 17000,
Overall.Position <= 17010) %>%
ggplot(mapping = aes(Distance, Age, col = Gender)) +
geom_point(size = 0.4) +
xlim(0,42.2)
anim <- p + transition_states(Time, state_length = 0)
anim
p <-
results2 %>%
filter(Time %in% c(45,60,75),
Gender == "Female",
Overall.Position >= 17000,
Overall.Position <= 17010) %>%
ggplot(mapping = aes(Distance, Age, col = Gender)) +
geom_point(size = 0.4) +
xlim(0,42.2)
anim <- p + transition_states(Time, state_length = 0)
anim
p <-
results2 %>%
group_by(Race.Number) %>%
filter(Time %in% c(45,60,75),
Gender == "Female",
Overall.Position >= 15000) %>%
ggplot(mapping = aes(Distance, Age, col = Gender)) +
geom_point(size = 0.4) +
xlim(0,42.2)
anim <- p + transition_states(Time, state_length = 0)
anim
p <-
results2 %>%
group_by(Race.Number) %>%
filter(Time %in% c(0,15,30,45,60,75),
Gender == "Female",
Overall.Position >= 15000) %>%
ggplot(mapping = aes(Distance, Age, col = Gender)) +
geom_point(size = 0.4) +
xlim(0,42.2)
anim <- p + transition_states(Time, state_length = 1, wrap = F)
anim
p <-
results2 %>%
filter(Time %in% c(0,15,30,45,60,75),
Gender == "Female",
Overall.Position >= 15000) %>%
ggplot(mapping = aes(Distance, Age, col = Gender)) +
geom_point(size = 0.4) +
xlim(0,42.2)
anim <- p + transition_states(Time, state_length = 1, wrap = F)
anim
anim_data <-
results2 %>%
filter(Time %in% seq(0,510, by = 15))
p <-
anim_data %>%
ggplot(mapping = aes(Distance, Age, col = Gender)) +
geom_point(size = 0.4) +
xlim(0,42.2)
anim <- p + transition_states(Time, state_length = 1, wrap = F)
anim
anim <- p + transition_states(Time, state_length = 0, wrap = F)
anim
warnings()
View(anim)
anim_save("filename"anim", animation = last_animation(), path = NULL, ...)
anim_save("anim1", animation = last_animation(), path = NULL, ...)
anim_save("anim1", animation = last_animation())
anim <- p + transition_states(Time, state_length = 0, wrap = F)
anim
anim <- p + transition_time(Time, range = 0:180)
anim
p <-
anim_data %>%
ggplot(mapping = aes(Distance, Age, col = Gender)) +
geom_point(size = 0.4, group = Race.Number) +
xlim(0,42.2)
p <-
anim_data %>%
ggplot(mapping = aes(Distance, Age, col = Gender)) +
geom_point(size = 0.4, aes(group = Race.Number)) +
xlim(0,42.2)
anim <- p + transition_time(Time)
anim
anim_save("anim2.gif", animation = last_animation(), width = 1200)
anim_save("anim2.gif", animation = last_animation(), width = 1200, height = 400)
anim <- p + transition_time(Time, width = 1200, height = 400)
anim <- p + transition_time(Time, ani.width = 1200, height = 400)
anim_save("anim2.gif", animation = last_animation(), ani.width = 1200, ani.height = 400)
anim(width = 800, height = 400)
animate(anim, height = 400, width = 1200)
anim_save("anim3.gif", animation = last_animation())
anim_data %>%
group_by(Race.Number) %>%
mutate(gain = Distance > lag(Distance)) %>%
View()
anim_data %>%
group_by(Race.Number) %>%
mutate(gain = Distance >= lag(Distance)) %>%
View()
View(anim_data)
anim_data %>%
group_by(Race.Number) %>%
mutate(gain = Distance >= lag(Distance)) %>%
filter(any(gain = FALSE)) %>%
View()
results <- readRDS("results.RDS")
View(results)
results <- ungroup(results) # results was group_by Race.Number since earlier in the script.
gap  <-  0.2
random_age <- function(Age.Bracket, Gender){
if (Age.Bracket >= 35) {
half.bracket <- 2.5
} else if (Age.Bracket == 20) {
half.bracket <- 7.5
} else {
half.bracket <- 1
}
if (Gender == "Male") {
return(Age.Bracket + runif(1, gap, half.bracket - gap))
} else {
return(Age.Bracket + runif(1, half.bracket + gap, 2 * half.bracket - gap))
}
}
results <-
results %>%
group_by(Race.Number) %>%
mutate(Age = random_age(Age.Bracket, Gender)) %>%
ungroup()
results <- select(results, 1,2,3,9,4,5,6,7)
results %>%
group_by(Race.Number) %>%
mutate(Prev.Ckpt = lag(Distance, default = 0),
Prev.Time = lag(Time, default = 0),
Next.Ckpt = lead(Distance, default = 42.2),
Next.Time = lead(Time, deefault = Time)) %>%
ungroup() %>% View()
warnings()
results %>%
group_by(Race.Number) %>%
mutate(Prev.Ckpt = lag(Distance, default = 0),
Prev.Time = lag(Time, default = 0),
Next.Ckpt = lead(Distance, default = 42.2),
Next.Time = lead(Time, default = Time)) %>%
ungroup() %>% View()
results %>%
group_by(Race.Number) %>%
mutate(Prev.Ckpt = lag(Distance, default = 0),
Prev.Time = lag(Time, default = 0),
Next.Ckpt = lead(Distance, default = 42.2),
Next.Time = lead(Time)) %>%
ungroup() %>% View()
results %>%
group_by(Race.Number) %>%
mutate(Prev.Ckpt = lag(Distance, default = 0),
Prev.Time = lag(Time, default = 0),
Next.Ckpt = lead(Distance, default = 42.2),
Next.Time = lead(Time, default = lag(Next.Time))) %>%
ungroup() %>% View()
results %>%
group_by(Race.Number) %>%
mutate(Prev.Ckpt = lag(Distance, default = 0),
Prev.Time = lag(Time, default = 0),
Next.Ckpt = lead(Distance, default = 42.2),
Next.Time = lead(Time, default = max(Time))) %>%
ungroup() %>% View()
results <-
results %>%
group_by(Race.Number) %>%
mutate(Prev.Ckpt = lag(Distance, default = 0),
Prev.Time = lag(Time, default = 0),
Next.Ckpt = lead(Distance, default = 42.2),
Next.Time = lead(Time, default = max(Time))) %>%
ungroup()
newrows <-
results %>%
select(1:6) %>%
distinct() %>%
slice(rep(1:n(), each = 35)) %>%
mutate(Distance = NA,
Time = rep(seq(0,510, by = 15),17620),
Prev.Ckpt = NA,
Prev.Time = NA,
Next.Ckpt = NA,
Next.Time = NA)
View(newrows)
results2 <-
results %>%
rbind(newrows) %>%
arrange(Overall.Position, Time) %>%
group_by(Overall.Position) %>%
fill(Prev.Ckpt, .direction = "up") %>%
fill(Prev.Time, .direction = "up") %>%
fill(Next.Ckpt, .direction = "up") %>%
fill(Next.Time, .direction = "up") %>%
ungroup()
results2 %>%
mutate(Distance = if_else(is.na(Distance),
Prev.Ckpt + (Time - Prev.Time)/(Next.Time - Prev.Time),
Distance)) %>% View()
results <-
results %>%
group_by(Race.Number) %>%
mutate(Prev.Ckpt = lag(Distance, default = 0),
Prev.Time = lag(Time, default = 0),
Next.Ckpt = Distance,
Next.Time = Time) %>%
ungroup()
newrows <-
results %>%
select(1:6) %>%
distinct() %>%
slice(rep(1:n(), each = 35)) %>%
mutate(Distance = NA,
Time = rep(seq(0,510, by = 15),17620),
Prev.Ckpt = NA,
Prev.Time = NA,
Next.Ckpt = NA,
Next.Time = NA)
results2 <-
results %>%
rbind(newrows) %>%
arrange(Overall.Position, Time) %>%
group_by(Overall.Position) %>%
fill(Prev.Ckpt, .direction = "up") %>%
fill(Prev.Time, .direction = "up") %>%
fill(Next.Ckpt, .direction = "up") %>%
fill(Next.Time, .direction = "up") %>%
ungroup()
results2 %>%
mutate(Distance = if_else(is.na(Distance),
Prev.Ckpt + (Time - Prev.Time)/(Next.Time - Prev.Time),
Distance)) %>% View()
results2 %>%
mutate(Distance = if_else(is.na(Distance),
Prev.Ckpt + (Next.Ckpt - Prev.Ckpt)(Time - Prev.Time)/(Next.Time - Prev.Time),
Distance)) %>% View()
results2 %>%
mutate(Distance = if_else(is.na(Distance),
Prev.Ckpt + (Next.Ckpt - Prev.Ckpt)*(Time - Prev.Time)/(Next.Time - Prev.Time),
Distance)) %>% View()
results2 <-
results2 %>%
mutate(Distance = if_else(is.na(Distance),
Prev.Ckpt + (Next.Ckpt - Prev.Ckpt)*(Time - Prev.Time)/(Next.Time - Prev.Time),
Distance))
saveRDS(results2, "results2_1.RDS") # 14/11/2019 16:05
anim_data <-
results2 %>%
filter(Time %in% seq(0,510, by = 15))
p <-
anim_data %>%
ggplot(mapping = aes(Distance, Age, col = Gender)) +
geom_point(size = 0.4, aes(group = Race.Number)) +
xlim(0,42.2)
anim <- p + transition_time(Time)
animate(anim, height = 400, width = 1200)
anim_data %>%
group_by(Race.Number) %>%
mutate(gain = Distance >= lag(Distance)) %>%
View()
anim_save("anim4.gif", animation = last_animation())
View(anim_data)
animate(anim, duration = 21, nframes = 200, height = 400, width = 1200)
anim_save("anim5.gif", animation = last_animation())
p <-
anim_data %>%
ggplot(mapping = aes(Distance, Age, col = Gender)) +
geom_point(size = 0.4, aes(group = Race.Number)) +
geom_vline(xintercept = 42.2) +
xlim(0,42.2)
p + facet_wrap(~Time)
