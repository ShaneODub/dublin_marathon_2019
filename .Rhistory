t30 = "30",
t31 = "31",
t32 = "32",
t33 = "33",
t34 = "34"
)
View(huge_df)
huge_df <- huge_df %>%
rename(
t1 = "1",
t2 = "2",
t3 = "3",
t4 = "4",
t5 = "5",
t6 = "6",
t7 = "7",
t8 = "8",
t9 = "9",
t10 = "10",
t11 = "11",
t12 = "12",
t13 = "13",
t14 = "14",
t15 = "15",
t16 = "16",
t17 = "17",
t18 = "18",
t19 = "19",
t20 = "20",
t21 = "21",
t22 = "22",
t23 = "23",
t24 = "24",
t25 = "25",
t26 = "26",
t27 = "27",
t28 = "28",
t29 = "29",
t30 = "30",
t31 = "31",
t32 = "32",
t33 = "33",
t34 = "34"
)
saveGIF({
for (i in names(huge_df)[49:82]) {
p = ggplot(data = huge_df,mapping = aes_string(i, "age", colour = "Gender")) +
geom_point(na.rm = T, size = .6) +
theme_void() +
theme(legend.position = "bottom", legend.title = element_blank()) +
scale_color_manual(values=c("#1E8F89", "#EE5A45")) +
guides(colour = guide_legend(override.aes = list(size=3))) +
geom_vline(aes(xintercept = 42.2)) +
xlim(0,42.2)
print(p)
}
}, movie.name="test.gif", ani.width = 800)
saveGIF({
for (i in names(huge_df)[49:82]) {
p = ggplot(data = huge_df,mapping = aes_string(i, "age", colour = "Gender")) +
geom_point(na.rm = T, size = .6) +
theme_void() +
theme(legend.position = "bottom", legend.title = element_blank()) +
scale_color_manual(values=c("#1E8F89", "#EE5A45")) +
guides(colour = guide_legend(override.aes = list(size=3))) +
geom_vline(aes(xintercept = c(10,20,30,40,42.2))) +
xlim(0,42.2)
print(p)
}
}, movie.name="test.gif", ani.width = 800)
saveGIF({
for (i in names(huge_df)[49:82]) {
p = ggplot(data = huge_df,mapping = aes_string(i, "age", colour = "Gender")) +
geom_point(na.rm = T, size = .6) +
theme_void() +
theme(legend.position = "bottom", legend.title = element_blank()) +
scale_color_manual(values=c("#1E8F89", "#EE5A45")) +
guides(colour = guide_legend(override.aes = list(size=3))) +
geom_vline(data = c(10,20,30,40,42.2),aes(xintercept = 42.2),colour = "grey") +
xlim(0,42.2)
print(p)
}
}, movie.name="test.gif", ani.width = 800)
saveGIF({
for (i in names(huge_df)[49:82]) {
p = ggplot(data = huge_df,mapping = aes_string(i, "age", colour = "Gender")) +
geom_point(na.rm = T, size = .6) +
theme_void() +
theme(legend.position = "bottom", legend.title = element_blank()) +
scale_color_manual(values=c("#1E8F89", "#EE5A45")) +
guides(colour = guide_legend(override.aes = list(size=3))) +
geom_vline(data = data.frame(c(10,20,30,40,42.2)),aes(xintercept = 42.2),colour = "grey") +
xlim(0,42.2)
print(p)
}
}, movie.name="test.gif", ani.width = 800)
saveGIF({
for (i in names(huge_df)[49:82]) {
p = ggplot(data = huge_df,mapping = aes_string(i, "age", colour = "Gender")) +
geom_point(na.rm = T, size = .6) +
theme_void() +
theme(legend.position = "bottom", legend.title = element_blank()) +
scale_color_manual(values=c("#1E8F89", "#EE5A45")) +
guides(colour = guide_legend(override.aes = list(size=3))) +
geom_vline(data.frame(v = c(10,20,30,40,42.2)),aes(xintercept = v),colour = "grey") +
xlim(0,42.2)
print(p)
}
}, movie.name="test.gif", ani.width = 800)
saveGIF({
for (i in names(huge_df)[49:82]) {
p = ggplot(data = huge_df,mapping = aes_string(i, "age", colour = "Gender")) +
geom_point(na.rm = T, size = .6) +
theme_void() +
theme(legend.position = "bottom", legend.title = element_blank()) +
scale_color_manual(values=c("#1E8F89", "#EE5A45")) +
guides(colour = guide_legend(override.aes = list(size=3))) +
geom_vline(data = data.frame(v = c(10,20,30,40,42.2)),mapping = aes(xintercept = v),colour = "grey") +
xlim(0,42.2)
print(p)
}
}, movie.name="test.gif", ani.width = 800)
saveGIF({
for (i in names(huge_df)[49:82]) {
p = ggplot(data = huge_df,mapping = aes_string(i, "age", colour = "Gender")) +
geom_point(na.rm = T, size = .6) +
theme_void() +
theme(legend.position = "bottom", legend.title = element_blank()) +
scale_color_manual(values=c("#1E8F89", "#EE5A45")) +
guides(colour = guide_legend(override.aes = list(size=3))) +
geom_vline(data = data.frame(v = c(10,20,30,40,42.2)),mapping = aes(xintercept = v),colour = "grey") +
xlim(0,42.2)
print(p)
}
}, movie.name="test.gif", ani.width = 800)
saveGIF({
for (i in names(huge_df)[49:82]) {
p = ggplot(data = huge_df,mapping = aes_string(i, "age", colour = "Gender")) +
geom_point(na.rm = T, size = .6) +
theme_void() +
theme(legend.position = "bottom", legend.title = element_blank()) +
scale_color_manual(values=c("#1E8F89", "#EE5A45")) +
guides(colour = guide_legend(override.aes = list(size=3))) +
geom_vline(data = data.frame(v = c(0,10,20,30,40,42.2)),
mapping = aes(xintercept = v),colour = "grey", linetype = "dotted") +
xlim(0,42.2)
print(p)
}
}, movie.name="test.gif", ani.width = 800)
saveGIF({
for (i in names(huge_df)[49:82]) {
p = ggplot(data = huge_df,mapping = aes_string(i, "age", colour = "Gender")) +
geom_point(na.rm = T, size = .6) +
theme_void() +
theme(legend.position = "bottom", legend.title = element_blank()) +
scale_color_manual(values=c("#1E8F89", "#EE5A45")) +
guides(colour = guide_legend(override.aes = list(size=3))) +
geom_vline(data = data.frame(v = c(0,10,20,30,40,42.2)),
mapping = aes(xintercept = v),colour = "grey", linetype = "dotted") +
xlim(0,42.2)
print(p)
}
}, movie.name="test.gif", ani.width = 1200)
saveGIF({
for (i in names(huge_df)[49:82]) {
p = ggplot(data = huge_df,mapping = aes_string(i, "age", colour = "Gender")) +
geom_point(na.rm = T, size = .6) +
theme_void() +
theme(legend.position = "bottom", legend.title = element_blank()) +
scale_color_manual(values=c("#1E8F89", "#EE5A45")) +
guides(colour = guide_legend(override.aes = list(size=3))) +
geom_vline(data = data.frame(v = c(0,10,20,30,40,42.2)),
mapping = aes(xintercept = v),colour = "grey", linetype = "dotted") +
xlim(0,42.2)
print(p)
}
}, movie.name="test.gif", ani.width = 2000)
saveGIF({
for (i in names(huge_df)[49:82]) {
p = ggplot(data = huge_df,mapping = aes_string(i, "age", colour = "Gender")) +
geom_point(na.rm = T, size = .6) +
theme_void() +
theme(legend.position = "bottom", legend.title = element_blank()) +
scale_color_manual(values=c("#1E8F89", "#EE5A45")) +
guides(colour = guide_legend(override.aes = list(size=3))) +
geom_vline(data = data.frame(v = c(0,10,20,30,40,42.2)),
mapping = aes(xintercept = v),colour = "grey", linetype = "dotted") +
xlim(0,42.2)
print(p)
}
}, movie.name="test.gif", ani.width = 1600)
saveGIF({
for (i in names(huge_df)[49:82]) {
p = ggplot(data = huge_df,mapping = aes_string(i, "age", colour = "Gender")) +
geom_point(na.rm = T, size = .6) +
theme_void() +
theme(legend.position = "bottom", legend.title = element_blank()) +
scale_color_manual(values=c("#1E8F89", "#EE5A45")) +
guides(colour = guide_legend(override.aes = list(size=3))) +
geom_vline(data = data.frame(v = c(0,10,20,30,40,42.2)),
mapping = aes(xintercept = v),linetype = "dotted") +
xlim(0,42.2)
print(p)
}
}, movie.name="test.gif", ani.width = 1600)
saveGIF({
for (i in names(huge_df)[49:82]) {
p = ggplot(data = huge_df,mapping = aes_string(i, "age", colour = "Gender")) +
geom_point(na.rm = T, size = .6) +
theme_void() +
theme(legend.position = "bottom", legend.title = element_blank()) +
scale_color_manual(values=c("#1E8F89", "#EE5A45")) +
guides(colour = guide_legend(override.aes = list(size=3))) +
geom_vline(data = data.frame(v = c(0,10,20,30,40,42.2)),
mapping = aes(xintercept = v),linetype = "dotted") +
xlim(0,42.2)
print(p)
}
}, movie.name="test.gif", ani.width = 1200)
tidy_df <- pivot_longer(huge_df,cols = t1:t34, names_to = "time_ran", values_to = "distance_ran")
View(tidy_df)
tidy_df$time_ran[1:5]
gsub(tidy_df$time_ran[1:5],"t","")
gsub("t","",tidy_df$time_ran[1:5])
as.numeric(gsub("t","",tidy_df$time_ran[1:5]))
tidy_df$time_ran <- as.numeric(gsub("t","",tidy_df$time_ran))
tidy_df$time_ran <- tidy_df$time_ran * 15
ggplot(data = tidy_df,mapping = aes(time_ran,age,colour = Gender)) +
geom_point(size= 0.6)
saveGIF({
for (i in names(huge_df)[49:82]) {
p = ggplot(data = huge_df,mapping = aes_string(i, "age", colour = "Gender")) +
geom_point(na.rm = T, size = .6) +
theme_void() +
theme(legend.position = "bottom", legend.title = element_blank()) +
scale_color_manual(values=c("#1E8F89", "#EE5A45")) +
guides(colour = guide_legend(override.aes = list(size=3))) +
geom_vline(data = data.frame(v = c(0,10,20,30,40,42.2)),
mapping = aes(xintercept = v),linetype = "dotted") +
xlim(0,42.2) + ylim(20,35)
print(p)
}
}, movie.name="test.gif", ani.width = 1200)
saveGIF({
for (i in names(huge_df)[49:82]) {
p = ggplot(data = huge_df,mapping = aes_string(i, "age", colour = "Gender")) +
geom_point(na.rm = T, size = .6) +
theme_void() +
theme(legend.position = "bottom", legend.title = element_blank()) +
scale_color_manual(values=c("#1E8F89", "#EE5A45")) +
guides(colour = guide_legend(override.aes = list(size=3))) +
geom_vline(data = data.frame(v = c(0,10,20,30,40,42.2)),
mapping = aes(xintercept = v),linetype = "dotted") +
xlim(0,42.2) + ylim(20,27.5)
print(p)
}
}, movie.name="test.gif", ani.width = 1200)
saveGIF({
for (i in names(huge_df)[49:82]) {
p = ggplot(data = huge_df,mapping = aes_string(i, "age", colour = "Gender")) +
geom_point(na.rm = T, size = .6) +
theme_void() +
theme(legend.position = "bottom", legend.title = element_blank()) +
scale_color_manual(values=c("#1E8F89", "#EE5A45")) +
guides(colour = guide_legend(override.aes = list(size=3))) +
geom_vline(data = data.frame(v = c(0,10,20,30,40,42.2)),
mapping = aes(xintercept = v),linetype = "dotted") +
xlim(0,42.2)
print(p)
}
}, movie.name="test.gif", ani.width = 1200)
setwd("~/Users/Shane/projects/marathon")
setwd("C:/Users/Shane/projects/marathon")
getwd()
plot(cars)
url <- "https://www.tdleventservices.co.uk/event-results/events?event=3492&page="
list.of.dataframes <- vector("list",180)
page <- 1
while (page <=2){
list.of.dataframes[[page]] <-
paste(url,page,sep="") %>%
read_html() %>%
html_nodes(xpath='/html/body/div[2]/div/div/div/div/div[2]/div[2]/table') %>%
html_table() %>%
data.frame()
page <- page + 1
Sys.sleep(28)
}
library(xml2)
url <- "https://www.tdleventservices.co.uk/event-results/events?event=3492&page="
list.of.dataframes <- vector("list",180)
page <- 1
while (page <=2){
list.of.dataframes[[page]] <-
paste(url,page,sep="") %>%
read_html() %>%                     # xml2 package
html_nodes(xpath='/html/body/div[2]/div/div/div/div/div[2]/div[2]/table') %>%
html_table() %>%
data.frame()
page <- page + 1
Sys.sleep(28)
}
library(rvest)
url <- "https://www.tdleventservices.co.uk/event-results/events?event=3492&page="
list.of.dataframes <- vector("list",180)
page <- 1
while (page <=2){
list.of.dataframes[[page]] <-
paste(url,page,sep="") %>%
read_html() %>%                     # xml2 package
html_nodes(xpath='/html/body/div[2]/div/div/div/div/div[2]/div[2]/table') %>%
html_table() %>%
data.frame()
page <- page + 1
Sys.sleep(28)
}
str(list.of.dataframes)
rm(list = ls())
library(xml2)
library(rvest)
library(xml2)
library(rvest)
# Set up an empty list to store our downloaded tables.
list.of.dataframes <- vector("list",180)
url <- "https://www.tdleventservices.co.uk/event-results/events?event=3492&page="
# Starting with page 1, loop through the 180 pages and extract the tables.
page <- 1
while (page <=180){
list.of.dataframes[[page]] <-
paste(url,page,sep="") %>%
read_html() %>%                     # xml2
html_nodes(xpath='/html/body/div[2]/div/div/div/div/div[2]/div[2]/table') %>%
html_table() %>%                    # rvest
data.frame()
page <- page + 1
Sys.sleep(5)
}
View(list.of.dataframes)
all.results.df <- bind_rows(list.of.dataframes)
View(all.results.df)
all.results.df <- readRDS(choose.files())
list.of.dataframes <- readRDS(choose.files())
View(list.of.dataframes)
all.results.df <- bind_rows(list.of.dataframes)
library(dplyr)
View(all.results.df)
libray(plyr)
library(plyr)
library(dplyr)
length(list.of.dataframes)
View(list.of.dataframes)
all.results.df <- rbind.fill(list.of.dataframes)
View(all.results.df)
str(all.results.df)
all.results.df <- all.results.df[c(1,4,6,10,12,16,18,20,21,22)]
str(all.results.df)
as.numeric(all.results.df$Overall.Position)[17800:17899]
summary(all.results.df)
all.results.df <- all.results.df[-17905:17931,]
all.results.df <- all.results.df[1:17904,]
View(!complete.cases(all.results.df))
as.numeric(all.results.df$X10K)
as.POSIXct(all.results.df[1:100,4:7], format = "%H:%M:%S")
apply(all.results.df[1:100,4:7],2,as.POSIXct, format = "%H:%M:%S")
apply(all.results.df[,c(4:8,10)],2,as.POSIXct, format = "%H:%M:%S")
apply(all.results.df[17901,c(4:8,10)],2,as.POSIXct, format = "%H:%M:%S")
class(all.results.df[,c(4:8,10)],2,as.POSIXct, format = "%H:%M:%S")
class(apply(all.results.df[,c(4:8,10)],2,as.POSIXct, format = "%H:%M:%S"))
# Convert the timestamp columns to POSIXct format
all.results.df <- data.frame(apply(all.results.df[,c(4:8,10)],2,as.POSIXct, format = "%H:%M:%S"))
all.results.df <- rbind.fill(list.of.dataframes)                                        # plyr
# Keeping just the columns I think I'll need.
all.results.df <- all.results.df[c(1,4,6,10,12,16,18,20,21,22)]
all.results.df <- all.results.df[1:17904,]
# Convert the timestamp columns to POSIXct format
all.results.df[,c(4:8,10)] <- data.frame(apply(all.results.df[,c(4:8,10)],2,as.POSIXct, format = "%H:%M:%S"))
all.results.df <- rbind.fill(list.of.dataframes)                                        # plyr
# Keeping just the columns I think I'll need.
all.results.df <- all.results.df[c(1,4,6,10,12,16,18,20,22,21)]
str(all.results.df)
all.results.df <- all.results.df[1:17904,]
# Convert the timestamp columns to POSIXct format
all.results.df[,4:9] <- data.frame(apply(all.results.df[,4:9],2,as.POSIXct, format = "%H:%M:%S"))
# Convert it to numeric and subtract today's date from it
frames_df[,c(4:8,10)] <- data.frame(apply(frames_df[,4:9],2,as.numeric))- as.numeric(as.POSIXct(today()))
# Convert it to numeric and subtract today's date from it
all.results.df[,4:9] <- data.frame(apply(all.results.df[,4:9],2,as.numeric))- as.numeric(as.POSIXct(today()))
library(lubridate)
# Convert it to numeric and subtract today's date (lubridate package) from it
all.results.df[,4:9] <- data.frame(apply(all.results.df[,4:9],2,as.numeric))- as.numeric(as.POSIXct(today()))
# Convert from seconds to minutes for readability
all.results.df[,4:9] <- all.results.df[,4:9]/60
str(all.results.df)
summary(all.results.df)
View(all.results.df[is.na(all.results.df$X10K)])
View(all.results.df[is.na(all.results.df$X10K),])
# There are 122 runners with no time recorded for the 10k checkpoint. Scrolling through
# them on the viewer, many of them are missing other checkpoints as well, or have implausible times
# at the later checkpoints. We won't lose anything by deleting these.
all.results.df <- all.results.df[!is.na(all.results.df$X10K),]
View(all.results.df[all.results.df$X10K < 30])
View(all.results.df[all.results.df$X10K < 30,])
# There are also 8 runners whose 10k times are very low, but their later times are very high.
# There's something wrong with these 10k times, so deleting these rows also.
all.results.df <- all.results.df[all.results.df$X10K > 30,]
View(all.results.df[is.na(all.results.df$X20K),])
View(all.results.df[is.na(all.results.df$X20K) & all.results.df$Overall.Position!="DNF",])
length(all.results.df[!is.na(all.results.df$X20K) | all.results.df$Overall.Position!="DNF",])
nrow(all.results.df[!is.na(all.results.df$X20K) | all.results.df$Overall.Position!="DNF",])
nrow(all.results.df[!is.na(all.results.df$X20K) | all.results.df$Overall.Position="DNF",])
nrow(all.results.df[!is.na(all.results.df$X20K) | all.results.df$Overall.Position == "DNF",])
# The guys with no 20k time are not worth keeping; deleting, except for the DNF runners.
all.results.df <- all.results.df[!is.na(all.results.df$X20K) | all.results.df$Overall.Position == "DNF",]
View(all.results.df[is.na(all.results.df$X30K),])
# The guys with no 20k time are not worth keeping; deleting, except for the DNF runners.
all.results.df <- all.results.df[!is.na(all.results.df$X30K) | all.results.df$Overall.Position == "DNF",]
View(all.results.df[is.na(all.results.df$X40K),])
View(all.results.df[is.na(all.results.df$X40K) & all.results.df$Overall.Position!="DMF",])
View(all.results.df[is.na(all.results.df$X40K) & all.results.df$Overall.Position!="DNF",])
View(all.results.df[is.na(all.results.df$X40K) & all.results.df$Overall.Position!="DNF","X40K"])
View(all.results.df[is.na(all.results.df$X40K) & all.results.df$Overall.Position!="DNF",])
all.results.df[is.na(all.results.df$X40K) & all.results.df$Overall.Position!="DNF","X40K"] <-
(all.results.df[is.na(all.results.df$X40K) & all.results.df$Overall.Position!="DNF","Chip.Time"] -
all.results.df[is.na(all.results.df$X40K) & all.results.df$Overall.Position!="DNF", "X30K"]) * 10.0/12.2
View(all.results.df[all.results.df$Race.Number %in% c(2603,10071,2080,13198,11757,11255,5737,18524,11135,9370,21025)])
View(all.results.df[all.results.df$Race.Number %in% c(2603,10071,2080,13198,11757,11255,5737,18524,11135,9370,21025),])
all.results.df[is.na(all.results.df$X40K) & all.results.df$Overall.Position!="DNF","X40K"] <-
all.results.df[is.na(all.results.df$X40K) & all.results.df$Overall.Position!="DNF","X30K"] +
(all.results.df[is.na(all.results.df$X40K) & all.results.df$Overall.Position!="DNF","Chip.Time"] -
all.results.df[is.na(all.results.df$X40K) & all.results.df$Overall.Position!="DNF", "X30K"]) * 10.0/12.2
View(all.results.df[all.results.df$Race.Number %in% c(2603,10071,2080,13198,11757,11255,5737,18524,11135,9370,21025),])
all.results.df[all.results.df$Race.Number %in% c(2603,10071,2080,13198,11757,11255,5737,18524,11135,9370,21025),"X40K"] <- NA
View(all.results.df[all.results.df$Race.Number %in% c(2603,10071,2080,13198,11757,11255,5737,18524,11135,9370,21025),])
all.results.df[is.na(all.results.df$X40K) & all.results.df$Overall.Position!="DNF","X40K"] <-
all.results.df[is.na(all.results.df$X40K) & all.results.df$Overall.Position!="DNF","X30K"] +
(all.results.df[is.na(all.results.df$X40K) & all.results.df$Overall.Position!="DNF","Chip.Time"] -
all.results.df[is.na(all.results.df$X40K) & all.results.df$Overall.Position!="DNF", "X30K"]) * 10.0/12.2
View(all.results.df[all.results.df$Race.Number %in% c(2603,10071,2080,13198,11757,11255,5737,18524,11135,9370,21025),])
summary(all.results.df)
summary(all.results.df[all.results.df$Overall.Position!="DNF"])
summary(all.results.df[all.results.df$Overall.Position!="DNF",])
View(all.results.df[is.na(all.results.df$Chip.Time),])
View(all.results.df[is.na(all.results.df$Chip.Time) & all.results.df$Overall.Position!="DNF",])
all.results.df[is.na(all.results.df$Chip.Time) & all.results.df$Overall.Position!="DNF","Chip.Time"] <-
View(all.results.df[is.na(all.results.df$Chip.Time) & all.results.df$Overall.Position!="DNF","Gun.Time"])
summary(all.results.df[all.results.df$Overall.Position!="DNF",])
all.results.df[is.na(all.results.df$Chip.Time) & all.results.df$Overall.Position!="DNF","Chip.Time"] <-
all.results.df[is.na(all.results.df$Chip.Time) & all.results.df$Overall.Position!="DNF","Gun.Time"]
View(all.results.df[is.na(all.results.df$Chip.Time) & all.results.df$Overall.Position!="DNF",])
View(all.results.df[all.results.df$Race.Number %in% c(73,74,75)])
View(all.results.df[all.results.df$Race.Number %in% c(73,74,75),])
summary(all.results.df)
View(all.results.df[is.na(all.results.df$X40K) & !is.na(all.results.df$Chip.Time),])
View(all.results.df[is.na(all.results.df$Chip.Time),])
View(all.results.df[!is.na(all.results.df$X40K) & is.na(all.results.df$Chip.Time),])
all.results.df[!is.na(all.results.df$X40K) & is.na(all.results.df$Chip.Time),"X30K"] +
(all.results.df[!is.na(all.results.df$X40K) & is.na(all.results.df$Chip.Time),"X40K"] -
all.results.df[!is.na(all.results.df$X40K) & is.na(all.results.df$Chip.Time),"X30K"]) * 12.2/10
all.results.df[!is.na(all.results.df$X40K) & is.na(all.results.df$Chip.Time),"Gun.Time"]) <-
all.results.df[!is.na(all.results.df$X40K) & is.na(all.results.df$Chip.Time),"X30K"] +
(all.results.df[!is.na(all.results.df$X40K) & is.na(all.results.df$Chip.Time),"X40K"] -
all.results.df[!is.na(all.results.df$X40K) & is.na(all.results.df$Chip.Time),"X30K"]) * 12.2/10
all.results.df[!is.na(all.results.df$X40K) & is.na(all.results.df$Chip.Time),"Gun.Time"] <-
all.results.df[!is.na(all.results.df$X40K) & is.na(all.results.df$Chip.Time),"X30K"] +
(all.results.df[!is.na(all.results.df$X40K) & is.na(all.results.df$Chip.Time),"X40K"] -
all.results.df[!is.na(all.results.df$X40K) & is.na(all.results.df$Chip.Time),"X30K"]) * 12.2/10
View(all.results.df[!is.na(all.results.df$X40K) & is.na(all.results.df$Chip.Time),])
View(all.results.df)
all.results.df[all.results.df$Race.Number == "10492",]
all.results.df[all.results.df$Race.Number == "10492"]
all.results.df <- all.results.df[all.results.df$Race.Number != "10492",]
all.results.df <- all.results.df[all.results.df$Race.Number != "16339",]
View(all.results.df)
# There are 66 runners who have no chip time, but have a gun-time.
View(all.results.df[is.na(all.results.df$Chip.Time) & all.results.df$Overall.Position!="DNF",])
summary(all.results.df)
summary(all.results.df[all.results.df$Overall.Position!="DNF"])
summary(all.results.df[all.results.df$Overall.Position!="DNF",])
# There are 66 runners who have no chip time, but have a gun-time.
View(all.results.df[is.na(all.results.df$Chip.Time) & !is.na(all.results.df$Gun.Time),])
all.results.df[!is.na(all.results.df$X40K) & is.na(all.results.df$Chip.Time),]
all.results.df[!is.na(all.results.df$X40K) & is.na(all.results.df$Chip.Time),"Chip.Time"] <-
all.results.df[!is.na(all.results.df$X40K) & is.na(all.results.df$Chip.Time),"Gun.Time"]
all.results.df[!is.na(all.results.df$X40K) & is.na(all.results.df$Chip.Time),]
summary(all.results.df)
nrow(all.results.df[all.results.df$Gun.Time == "DNF"])
nrow(all.results.df[all.results.df$Gun.Time == "DNF",])
View(all.results.df[all.results.df$Gun.Time == "DNF",])
View(all.results.df[all.results.df$Overall.Position == "DNF",])
View(all.results.df[all.results.df$Race.Number %in% c(20714,7858,10141,18002),])
View(all.results.df[all.results.df$Race.Number %in% c(20714,7858,10141,18002),"Overall.Position"])
all.results.df[all.results.df$Race.Number %in% c(20714,7858,10141,18002),"Overall.Position"] <- "unknown"
View(all.results.df[all.results.df$Race.Number %in% c(20714,7858,10141,18002),"Overall.Position"])
summary(all.results.df)
View(all.results.df[all.results.df$Overall.Position!= "DNF",])
str(all.results.df)
as.factor(all.results.df[,2:3])
str(as.factor(all.results.df[,2:3]))
lapply(all.results.df[,2:3], as.factor)
str(lapply(all.results.df[,2:3], as.factor))
apply(all.results.df[,2:3], as.factor)
apply(all.results.df[,2:3],2, as.factor)
str(apply(all.results.df[,2:3],2, as.factor))
saveRDS(all.results.df, file = "all.results.df")
all.results.df[,2:3] <- lapply(all.results.df[,2:3], as.factor)
# Let's see where we are:
str(all.results.df)
all.results.df$Category <- gsub("F","", all.results.df$Category)
all.results.df$Category <- gsub("M","", all.results.df$Category)
all.results.df$Category <- gsub("U19","18", all.results.df$Category)
all.results.df$Category <- gsub("S","20", all.results.df$Category)
saveRDS(all.results.df, file = "all.results.df") # save it as a precaution
